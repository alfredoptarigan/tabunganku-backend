// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
)

const TableNameSaving = "savings"

// Saving mapped from table <savings>
type Saving struct {
	UUID           string         `gorm:"column:uuid;type:uuid;primaryKey;default:gen_random_uuid()" json:"uuid"`
	UserUUID       string         `gorm:"column:user_uuid;type:uuid;not null;index:idx_savings_user_uuid,priority:1" json:"user_uuid"`
	Name           string         `gorm:"column:name;type:character varying(255);not null;index:idx_savings_name,priority:1" json:"name"`
	TargetAmount   float64        `gorm:"column:target_amount;type:numeric(10,2);not null" json:"target_amount"`
	CurrencyCode   string         `gorm:"column:currency_code;type:character varying(3);not null;index:idx_savings_currency_code,priority:1" json:"currency_code"`
	Image          string         `gorm:"column:image;type:character varying(255);not null" json:"image"`
	FillingPlan    string         `gorm:"column:filling_plan;type:character varying(7);not null;index:idx_savings_filling_plan,priority:1" json:"filling_plan"`
	FillingNominal float64        `gorm:"column:filling_nominal;type:numeric(10,2);not null" json:"filling_nominal"`
	IsCompleted    *bool          `gorm:"column:is_completed;type:boolean" json:"is_completed"`
	CompletedAt    *time.Time     `gorm:"column:completed_at;type:timestamp with time zone" json:"completed_at"`
	CreatedAt      *time.Time     `gorm:"column:created_at;type:timestamp with time zone;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt      *time.Time     `gorm:"column:updated_at;type:timestamp with time zone;default:CURRENT_TIMESTAMP" json:"updated_at"`
	DeletedAt      gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone;index:idx_savings_deleted_at,priority:1" json:"deleted_at"`
}

// TableName Saving's table name
func (*Saving) TableName() string {
	return TableNameSaving
}
