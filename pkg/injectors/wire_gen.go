// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"alfredo/tabunganku/config"
	"alfredo/tabunganku/pkg/controllers"
	"alfredo/tabunganku/pkg/repositories"
	"alfredo/tabunganku/pkg/services"
	"alfredo/tabunganku/pkg/validator"
	"github.com/google/wire"
)

// Injectors from injector.go:

func InitializeApplication() *config.Application {
	db := config.InitDatabasePostgres()
	application := config.NewApplication(db)
	return application
}

func InitializeUserController() controllers.UserController {
	client := config.InitRedis()
	redisRepository := repositories.NewRedisRepository(client)
	redisService := services.NewRedisService(redisRepository)
	db := config.InitDatabasePostgres()
	userRepository := repositories.NewUserRepository(db)
	jwtService := services.NewJwtService(redisService)
	userService := services.NewUserService(userRepository, jwtService)
	userController := controllers.NewUserController(redisService, userService)
	return userController
}

func InitializeSavingController() controllers.SavingController {
	db := config.InitDatabasePostgres()
	savingRepository := repositories.NewSavingRepository(db)
	savingService := services.NewSavingService(savingRepository)
	client := config.InitRedis()
	redisRepository := repositories.NewRedisRepository(client)
	redisService := services.NewRedisService(redisRepository)
	userRepository := repositories.NewUserRepository(db)
	jwtService := services.NewJwtService(redisService)
	userService := services.NewUserService(userRepository, jwtService)
	savingController := controllers.NewSavingController(savingService, redisService, userService)
	return savingController
}

// injector.go:

var initDBPostgresSet = wire.NewSet(config.InitDatabasePostgres)

var redisSet = wire.NewSet(config.InitRedis, repositories.NewRedisRepository, services.NewRedisService)

var jwtSet = wire.NewSet(services.NewJwtService)

var authSet = wire.NewSet(
	redisSet,
	initDBPostgresSet, services.NewUserService, repositories.NewUserRepository, validator.NewValidator,
)
