basePath: /api/v1
definitions:
  dtos.ErrorResponseDTO:
    properties:
      code:
        description: 'opsional: kode error internal'
        type: integer
      errors: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  dtos.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dtos.LoginResponse:
    properties:
      access_token:
        type: string
      email:
        type: string
      expires_in:
        type: integer
      name:
        type: string
      refresh_token:
        type: string
      token_type:
        type: string
      user_uuid:
        type: string
    type: object
  dtos.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:9090
info:
  contact:
    email: your-email@example.com
    name: API Support
  description: API documentation for Tabunganku Backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Tabunganku
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/dtos.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dtos.LoginResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
      summary: User Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - multipart/form-data
      description: Register a new user with form data including optional image upload
      parameters:
      - description: User's full name
        in: formData
        name: name
        required: true
        type: string
      - description: User's email address
        in: formData
        name: email
        required: true
        type: string
      - description: User's password (minimum 6 characters)
        in: formData
        name: password
        required: true
        type: string
      - description: Password confirmation (must match password)
        in: formData
        name: confirmation_password
        required: true
        type: string
      - description: User's phone number
        in: formData
        name: phone_number
        required: true
        type: string
      - description: User's profile image (optional)
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/dtos.SuccessResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
      summary: User Registration
      tags:
      - Authentication
  /savings:
    get:
      consumes:
      - application/json
      description: Get all savings records for the authenticated user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
      summary: Get user savings
      tags:
      - savings
    post:
      consumes:
      - multipart/form-data
      description: Create a new saving record with optional image upload
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Saving name
        in: formData
        maxLength: 50
        minLength: 3
        name: name
        required: true
        type: string
      - description: Target amount
        in: formData
        minimum: 0.01
        name: target_amount
        required: true
        type: number
      - description: Currency code (3 characters)
        in: formData
        maxLength: 3
        minLength: 3
        name: currency_code
        required: true
        type: string
      - description: Filling plan
        enum:
        - Daily
        - Weekly
        - Monthly
        in: formData
        name: filling_plan
        required: true
        type: string
      - description: Filling nominal amount
        in: formData
        minimum: 0.01
        name: filling_nominal
        required: true
        type: number
      - description: Image file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponseDTO'
      summary: Create a new saving
      tags:
      - savings
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
